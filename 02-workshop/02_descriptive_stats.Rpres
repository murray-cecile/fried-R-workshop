Summarizing data with dplyr and the tidyverse
========================================================
author: Cecile Murray
date: February 7, 2020
autosize: true

```{r setup, include=FALSE}
libs <- c("here",
          "tidyverse",
          "magrittr",
          "purrr",
          "knitr", 
          "kableExtra",
          "janitor")
lapply(libs, library, character.only = TRUE)
```

Goals for today
========================================================

- Go over some key terms and syntax
- Introduce some typical data cleaning concepts and tools
- Introduce basic commands to compute descriptive statistics and how to join two datasets
- Use these on real data

Key terms
========================================================

- Variable: refers to the columns of a dataframe (usually).
- Observation: refers to one unit, often one row, of a dataframe

```{r df_terms, echo=FALSE}
key_term_df <- tibble(
  "person_id" = round(runif(4, 100, 200)),
  "age" = round(runif(4, 0, 85)),
  "sex" = if_else(runif(4) > 0.5, "F", "M")
)

kable(key_term_df)
```

Pipes
========================================================

- `%>%` is an operator, just like `+`, `-`, `&`, etc
- it lets us **chain functions together**, passing data from one to the next

```{r pipes, message=FALSE, warning=FALSE, results='hide'}
# read in the crimes dataset from last time and assign it the name crimes
crimes <- read_csv("../01-workshop/Crimes_-_2018.csv")

# these are equivalent!
glimpse(crimes)
crimes %>% glimpse() # here we are using a pipe

# here's a reflexive pipe, which basically modifies the original dataframe in place
#   we are piping crimes into the clean_names() function 
#   then assigning the name crimes to the result 
crimes %<>% janitor::clean_names()
```

Data cleaning: common tasks
========================================================

- converting variable types: string to numeric and vice versa, dates, etc
- look for missing values
- "recode" variables into useful categories
- reshape the data: convert columns and rows
- look up another dataset

tidyverse and dplyr verbs
========================================================

- `dplyr` is a package in the `tidyverse` family of packages
- Common "grammar" for working with data, objects, functions, etc

